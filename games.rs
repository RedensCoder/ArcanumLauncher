//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "games")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false, column_type = "Text")]
    pub gamename: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub desc: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub author: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub genre: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub about: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub avatar: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub trailer: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub screenshots: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub file: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::purchase::Entity")]
    Purchase,
}

impl Related<super::purchase::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Purchase.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
